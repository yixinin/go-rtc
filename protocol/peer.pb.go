// Code generated by protoc-gen-go. DO NOT EDIT.
// source: peer.proto

package protocol

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//请求answer
type OpenPeerReq struct {
	RoomId               int32    `protobuf:"varint,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Sdp                  string   `protobuf:"bytes,3,opt,name=sdp,proto3" json:"sdp,omitempty"`
	FromUid              int64    `protobuf:"varint,4,opt,name=fromUid,proto3" json:"fromUid,omitempty"`
	VideoOn              bool     `protobuf:"varint,5,opt,name=videoOn,proto3" json:"videoOn,omitempty"`
	AudioOn              bool     `protobuf:"varint,6,opt,name=audioOn,proto3" json:"audioOn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenPeerReq) Reset()         { *m = OpenPeerReq{} }
func (m *OpenPeerReq) String() string { return proto.CompactTextString(m) }
func (*OpenPeerReq) ProtoMessage()    {}
func (*OpenPeerReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_055ae5a865fc1c9e, []int{0}
}

func (m *OpenPeerReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenPeerReq.Unmarshal(m, b)
}
func (m *OpenPeerReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenPeerReq.Marshal(b, m, deterministic)
}
func (m *OpenPeerReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenPeerReq.Merge(m, src)
}
func (m *OpenPeerReq) XXX_Size() int {
	return xxx_messageInfo_OpenPeerReq.Size(m)
}
func (m *OpenPeerReq) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenPeerReq.DiscardUnknown(m)
}

var xxx_messageInfo_OpenPeerReq proto.InternalMessageInfo

func (m *OpenPeerReq) GetRoomId() int32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

func (m *OpenPeerReq) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *OpenPeerReq) GetSdp() string {
	if m != nil {
		return m.Sdp
	}
	return ""
}

func (m *OpenPeerReq) GetFromUid() int64 {
	if m != nil {
		return m.FromUid
	}
	return 0
}

func (m *OpenPeerReq) GetVideoOn() bool {
	if m != nil {
		return m.VideoOn
	}
	return false
}

func (m *OpenPeerReq) GetAudioOn() bool {
	if m != nil {
		return m.AudioOn
	}
	return false
}

type OpenPeerAck struct {
	Sdp                  string   `protobuf:"bytes,1,opt,name=sdp,proto3" json:"sdp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenPeerAck) Reset()         { *m = OpenPeerAck{} }
func (m *OpenPeerAck) String() string { return proto.CompactTextString(m) }
func (*OpenPeerAck) ProtoMessage()    {}
func (*OpenPeerAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_055ae5a865fc1c9e, []int{1}
}

func (m *OpenPeerAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenPeerAck.Unmarshal(m, b)
}
func (m *OpenPeerAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenPeerAck.Marshal(b, m, deterministic)
}
func (m *OpenPeerAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenPeerAck.Merge(m, src)
}
func (m *OpenPeerAck) XXX_Size() int {
	return xxx_messageInfo_OpenPeerAck.Size(m)
}
func (m *OpenPeerAck) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenPeerAck.DiscardUnknown(m)
}

var xxx_messageInfo_OpenPeerAck proto.InternalMessageInfo

func (m *OpenPeerAck) GetSdp() string {
	if m != nil {
		return m.Sdp
	}
	return ""
}

type Candidate struct {
	Candidate            string   `protobuf:"bytes,1,opt,name=candidate,proto3" json:"candidate,omitempty"`
	SdpMlineindex        uint32   `protobuf:"varint,2,opt,name=sdpMlineindex,proto3" json:"sdpMlineindex,omitempty"`
	SdpMid               string   `protobuf:"bytes,3,opt,name=sdpMid,proto3" json:"sdpMid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Candidate) Reset()         { *m = Candidate{} }
func (m *Candidate) String() string { return proto.CompactTextString(m) }
func (*Candidate) ProtoMessage()    {}
func (*Candidate) Descriptor() ([]byte, []int) {
	return fileDescriptor_055ae5a865fc1c9e, []int{2}
}

func (m *Candidate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Candidate.Unmarshal(m, b)
}
func (m *Candidate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Candidate.Marshal(b, m, deterministic)
}
func (m *Candidate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Candidate.Merge(m, src)
}
func (m *Candidate) XXX_Size() int {
	return xxx_messageInfo_Candidate.Size(m)
}
func (m *Candidate) XXX_DiscardUnknown() {
	xxx_messageInfo_Candidate.DiscardUnknown(m)
}

var xxx_messageInfo_Candidate proto.InternalMessageInfo

func (m *Candidate) GetCandidate() string {
	if m != nil {
		return m.Candidate
	}
	return ""
}

func (m *Candidate) GetSdpMlineindex() uint32 {
	if m != nil {
		return m.SdpMlineindex
	}
	return 0
}

func (m *Candidate) GetSdpMid() string {
	if m != nil {
		return m.SdpMid
	}
	return ""
}

//添加客户端candidate
type AddCandidateReq struct {
	Key                  string     `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	FromUid              int64      `protobuf:"varint,2,opt,name=fromUid,proto3" json:"fromUid,omitempty"`
	Candidate            *Candidate `protobuf:"bytes,3,opt,name=candidate,proto3" json:"candidate,omitempty"`
	RoomId               int32      `protobuf:"varint,4,opt,name=roomId,proto3" json:"roomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *AddCandidateReq) Reset()         { *m = AddCandidateReq{} }
func (m *AddCandidateReq) String() string { return proto.CompactTextString(m) }
func (*AddCandidateReq) ProtoMessage()    {}
func (*AddCandidateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_055ae5a865fc1c9e, []int{3}
}

func (m *AddCandidateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddCandidateReq.Unmarshal(m, b)
}
func (m *AddCandidateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddCandidateReq.Marshal(b, m, deterministic)
}
func (m *AddCandidateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddCandidateReq.Merge(m, src)
}
func (m *AddCandidateReq) XXX_Size() int {
	return xxx_messageInfo_AddCandidateReq.Size(m)
}
func (m *AddCandidateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddCandidateReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddCandidateReq proto.InternalMessageInfo

func (m *AddCandidateReq) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *AddCandidateReq) GetFromUid() int64 {
	if m != nil {
		return m.FromUid
	}
	return 0
}

func (m *AddCandidateReq) GetCandidate() *Candidate {
	if m != nil {
		return m.Candidate
	}
	return nil
}

func (m *AddCandidateReq) GetRoomId() int32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

type AddCandidateAck struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddCandidateAck) Reset()         { *m = AddCandidateAck{} }
func (m *AddCandidateAck) String() string { return proto.CompactTextString(m) }
func (*AddCandidateAck) ProtoMessage()    {}
func (*AddCandidateAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_055ae5a865fc1c9e, []int{4}
}

func (m *AddCandidateAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddCandidateAck.Unmarshal(m, b)
}
func (m *AddCandidateAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddCandidateAck.Marshal(b, m, deterministic)
}
func (m *AddCandidateAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddCandidateAck.Merge(m, src)
}
func (m *AddCandidateAck) XXX_Size() int {
	return xxx_messageInfo_AddCandidateAck.Size(m)
}
func (m *AddCandidateAck) XXX_DiscardUnknown() {
	xxx_messageInfo_AddCandidateAck.DiscardUnknown(m)
}

var xxx_messageInfo_AddCandidateAck proto.InternalMessageInfo

func (m *AddCandidateAck) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

//推送服务端candidate
type NotifyCandidate struct {
	Uid                  int64      `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	FromUid              int64      `protobuf:"varint,2,opt,name=fromUid,proto3" json:"fromUid,omitempty"`
	Candidate            *Candidate `protobuf:"bytes,3,opt,name=candidate,proto3" json:"candidate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *NotifyCandidate) Reset()         { *m = NotifyCandidate{} }
func (m *NotifyCandidate) String() string { return proto.CompactTextString(m) }
func (*NotifyCandidate) ProtoMessage()    {}
func (*NotifyCandidate) Descriptor() ([]byte, []int) {
	return fileDescriptor_055ae5a865fc1c9e, []int{5}
}

func (m *NotifyCandidate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotifyCandidate.Unmarshal(m, b)
}
func (m *NotifyCandidate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotifyCandidate.Marshal(b, m, deterministic)
}
func (m *NotifyCandidate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyCandidate.Merge(m, src)
}
func (m *NotifyCandidate) XXX_Size() int {
	return xxx_messageInfo_NotifyCandidate.Size(m)
}
func (m *NotifyCandidate) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyCandidate.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyCandidate proto.InternalMessageInfo

func (m *NotifyCandidate) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *NotifyCandidate) GetFromUid() int64 {
	if m != nil {
		return m.FromUid
	}
	return 0
}

func (m *NotifyCandidate) GetCandidate() *Candidate {
	if m != nil {
		return m.Candidate
	}
	return nil
}

type CreateRoomReq struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRoomReq) Reset()         { *m = CreateRoomReq{} }
func (m *CreateRoomReq) String() string { return proto.CompactTextString(m) }
func (*CreateRoomReq) ProtoMessage()    {}
func (*CreateRoomReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_055ae5a865fc1c9e, []int{6}
}

func (m *CreateRoomReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRoomReq.Unmarshal(m, b)
}
func (m *CreateRoomReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRoomReq.Marshal(b, m, deterministic)
}
func (m *CreateRoomReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRoomReq.Merge(m, src)
}
func (m *CreateRoomReq) XXX_Size() int {
	return xxx_messageInfo_CreateRoomReq.Size(m)
}
func (m *CreateRoomReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRoomReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRoomReq proto.InternalMessageInfo

func (m *CreateRoomReq) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type CreateRoomAck struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRoomAck) Reset()         { *m = CreateRoomAck{} }
func (m *CreateRoomAck) String() string { return proto.CompactTextString(m) }
func (*CreateRoomAck) ProtoMessage()    {}
func (*CreateRoomAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_055ae5a865fc1c9e, []int{7}
}

func (m *CreateRoomAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRoomAck.Unmarshal(m, b)
}
func (m *CreateRoomAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRoomAck.Marshal(b, m, deterministic)
}
func (m *CreateRoomAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRoomAck.Merge(m, src)
}
func (m *CreateRoomAck) XXX_Size() int {
	return xxx_messageInfo_CreateRoomAck.Size(m)
}
func (m *CreateRoomAck) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRoomAck.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRoomAck proto.InternalMessageInfo

func (m *CreateRoomAck) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type CloseRoomReq struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseRoomReq) Reset()         { *m = CloseRoomReq{} }
func (m *CloseRoomReq) String() string { return proto.CompactTextString(m) }
func (*CloseRoomReq) ProtoMessage()    {}
func (*CloseRoomReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_055ae5a865fc1c9e, []int{8}
}

func (m *CloseRoomReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseRoomReq.Unmarshal(m, b)
}
func (m *CloseRoomReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseRoomReq.Marshal(b, m, deterministic)
}
func (m *CloseRoomReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseRoomReq.Merge(m, src)
}
func (m *CloseRoomReq) XXX_Size() int {
	return xxx_messageInfo_CloseRoomReq.Size(m)
}
func (m *CloseRoomReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseRoomReq.DiscardUnknown(m)
}

var xxx_messageInfo_CloseRoomReq proto.InternalMessageInfo

func (m *CloseRoomReq) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type CloseRoomAck struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseRoomAck) Reset()         { *m = CloseRoomAck{} }
func (m *CloseRoomAck) String() string { return proto.CompactTextString(m) }
func (*CloseRoomAck) ProtoMessage()    {}
func (*CloseRoomAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_055ae5a865fc1c9e, []int{9}
}

func (m *CloseRoomAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseRoomAck.Unmarshal(m, b)
}
func (m *CloseRoomAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseRoomAck.Marshal(b, m, deterministic)
}
func (m *CloseRoomAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseRoomAck.Merge(m, src)
}
func (m *CloseRoomAck) XXX_Size() int {
	return xxx_messageInfo_CloseRoomAck.Size(m)
}
func (m *CloseRoomAck) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseRoomAck.DiscardUnknown(m)
}

var xxx_messageInfo_CloseRoomAck proto.InternalMessageInfo

func (m *CloseRoomAck) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

//断开连接
type KickReq struct {
	Uid                  int64    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Pub                  bool     `protobuf:"varint,2,opt,name=pub,proto3" json:"pub,omitempty"`
	Sub                  bool     `protobuf:"varint,3,opt,name=sub,proto3" json:"sub,omitempty"`
	RoomId               int32    `protobuf:"varint,4,opt,name=roomId,proto3" json:"roomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KickReq) Reset()         { *m = KickReq{} }
func (m *KickReq) String() string { return proto.CompactTextString(m) }
func (*KickReq) ProtoMessage()    {}
func (*KickReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_055ae5a865fc1c9e, []int{10}
}

func (m *KickReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KickReq.Unmarshal(m, b)
}
func (m *KickReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KickReq.Marshal(b, m, deterministic)
}
func (m *KickReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KickReq.Merge(m, src)
}
func (m *KickReq) XXX_Size() int {
	return xxx_messageInfo_KickReq.Size(m)
}
func (m *KickReq) XXX_DiscardUnknown() {
	xxx_messageInfo_KickReq.DiscardUnknown(m)
}

var xxx_messageInfo_KickReq proto.InternalMessageInfo

func (m *KickReq) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *KickReq) GetPub() bool {
	if m != nil {
		return m.Pub
	}
	return false
}

func (m *KickReq) GetSub() bool {
	if m != nil {
		return m.Sub
	}
	return false
}

func (m *KickReq) GetRoomId() int32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

type KickAck struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KickAck) Reset()         { *m = KickAck{} }
func (m *KickAck) String() string { return proto.CompactTextString(m) }
func (*KickAck) ProtoMessage()    {}
func (*KickAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_055ae5a865fc1c9e, []int{11}
}

func (m *KickAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KickAck.Unmarshal(m, b)
}
func (m *KickAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KickAck.Marshal(b, m, deterministic)
}
func (m *KickAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KickAck.Merge(m, src)
}
func (m *KickAck) XXX_Size() int {
	return xxx_messageInfo_KickAck.Size(m)
}
func (m *KickAck) XXX_DiscardUnknown() {
	xxx_messageInfo_KickAck.DiscardUnknown(m)
}

var xxx_messageInfo_KickAck proto.InternalMessageInfo

func (m *KickAck) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

//如果音视频都不接收则断开连接 下次开启时再连接
type ControlReq struct {
	Uid                  int64    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	FromUid              int64    `protobuf:"varint,2,opt,name=fromUid,proto3" json:"fromUid,omitempty"`
	VideoOn              bool     `protobuf:"varint,3,opt,name=videoOn,proto3" json:"videoOn,omitempty"`
	AudioOn              bool     `protobuf:"varint,4,opt,name=audioOn,proto3" json:"audioOn,omitempty"`
	RoomId               int32    `protobuf:"varint,5,opt,name=roomId,proto3" json:"roomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControlReq) Reset()         { *m = ControlReq{} }
func (m *ControlReq) String() string { return proto.CompactTextString(m) }
func (*ControlReq) ProtoMessage()    {}
func (*ControlReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_055ae5a865fc1c9e, []int{12}
}

func (m *ControlReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlReq.Unmarshal(m, b)
}
func (m *ControlReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlReq.Marshal(b, m, deterministic)
}
func (m *ControlReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlReq.Merge(m, src)
}
func (m *ControlReq) XXX_Size() int {
	return xxx_messageInfo_ControlReq.Size(m)
}
func (m *ControlReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlReq.DiscardUnknown(m)
}

var xxx_messageInfo_ControlReq proto.InternalMessageInfo

func (m *ControlReq) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ControlReq) GetFromUid() int64 {
	if m != nil {
		return m.FromUid
	}
	return 0
}

func (m *ControlReq) GetVideoOn() bool {
	if m != nil {
		return m.VideoOn
	}
	return false
}

func (m *ControlReq) GetAudioOn() bool {
	if m != nil {
		return m.AudioOn
	}
	return false
}

func (m *ControlReq) GetRoomId() int32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

type ControlAck struct {
	Disconnected         bool     `protobuf:"varint,1,opt,name=disconnected,proto3" json:"disconnected,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControlAck) Reset()         { *m = ControlAck{} }
func (m *ControlAck) String() string { return proto.CompactTextString(m) }
func (*ControlAck) ProtoMessage()    {}
func (*ControlAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_055ae5a865fc1c9e, []int{13}
}

func (m *ControlAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlAck.Unmarshal(m, b)
}
func (m *ControlAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlAck.Marshal(b, m, deterministic)
}
func (m *ControlAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlAck.Merge(m, src)
}
func (m *ControlAck) XXX_Size() int {
	return xxx_messageInfo_ControlAck.Size(m)
}
func (m *ControlAck) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlAck.DiscardUnknown(m)
}

var xxx_messageInfo_ControlAck proto.InternalMessageInfo

func (m *ControlAck) GetDisconnected() bool {
	if m != nil {
		return m.Disconnected
	}
	return false
}

func init() {
	proto.RegisterType((*OpenPeerReq)(nil), "protocol.OpenPeerReq")
	proto.RegisterType((*OpenPeerAck)(nil), "protocol.OpenPeerAck")
	proto.RegisterType((*Candidate)(nil), "protocol.Candidate")
	proto.RegisterType((*AddCandidateReq)(nil), "protocol.AddCandidateReq")
	proto.RegisterType((*AddCandidateAck)(nil), "protocol.AddCandidateAck")
	proto.RegisterType((*NotifyCandidate)(nil), "protocol.NotifyCandidate")
	proto.RegisterType((*CreateRoomReq)(nil), "protocol.CreateRoomReq")
	proto.RegisterType((*CreateRoomAck)(nil), "protocol.CreateRoomAck")
	proto.RegisterType((*CloseRoomReq)(nil), "protocol.CloseRoomReq")
	proto.RegisterType((*CloseRoomAck)(nil), "protocol.CloseRoomAck")
	proto.RegisterType((*KickReq)(nil), "protocol.KickReq")
	proto.RegisterType((*KickAck)(nil), "protocol.KickAck")
	proto.RegisterType((*ControlReq)(nil), "protocol.ControlReq")
	proto.RegisterType((*ControlAck)(nil), "protocol.ControlAck")
}

func init() { proto.RegisterFile("peer.proto", fileDescriptor_055ae5a865fc1c9e) }

var fileDescriptor_055ae5a865fc1c9e = []byte{
	// 547 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xc1, 0x8e, 0xd3, 0x30,
	0x10, 0xc5, 0x49, 0xda, 0xa6, 0xd3, 0x96, 0x2d, 0x06, 0x96, 0x10, 0x01, 0x5b, 0x2c, 0x90, 0x7a,
	0xaa, 0x60, 0x39, 0x20, 0x21, 0x21, 0x51, 0x55, 0x42, 0x42, 0x08, 0x16, 0x19, 0x21, 0xce, 0x6d,
	0xec, 0x45, 0x56, 0xdb, 0x38, 0x24, 0xe9, 0x8a, 0xbd, 0x73, 0xe0, 0x0f, 0xf8, 0x58, 0x2e, 0xc8,
	0x89, 0x13, 0x3b, 0x25, 0xb9, 0x71, 0xaa, 0xe7, 0xcd, 0xc4, 0xf3, 0xe6, 0x3d, 0x4f, 0x01, 0x12,
	0xce, 0xd3, 0x45, 0x92, 0xca, 0x5c, 0x62, 0xbf, 0xf8, 0x89, 0xe4, 0x8e, 0xfc, 0x46, 0x30, 0xba,
	0x48, 0x78, 0xfc, 0x89, 0xf3, 0x94, 0xf2, 0xef, 0xf8, 0x14, 0xfa, 0xa9, 0x94, 0xfb, 0x77, 0x2c,
	0x40, 0x33, 0x34, 0xef, 0x51, 0x1d, 0xe1, 0x29, 0xb8, 0x5b, 0x7e, 0x1d, 0x38, 0x33, 0x34, 0x1f,
	0x52, 0x75, 0x54, 0x48, 0xc6, 0x92, 0xc0, 0x2d, 0x91, 0x8c, 0x25, 0x38, 0x80, 0xc1, 0x65, 0x2a,
	0xf7, 0x5f, 0x04, 0x0b, 0xbc, 0x19, 0x9a, 0xbb, 0xb4, 0x0a, 0x55, 0xe6, 0x4a, 0x30, 0x2e, 0x2f,
	0xe2, 0xa0, 0x37, 0x43, 0x73, 0x9f, 0x56, 0xa1, 0xca, 0xac, 0x0f, 0x4c, 0xa8, 0x4c, 0xbf, 0xcc,
	0xe8, 0x90, 0x9c, 0x19, 0x62, 0xcb, 0x68, 0x5b, 0xb5, 0x43, 0x75, 0x3b, 0xf2, 0x0d, 0x86, 0xab,
	0x75, 0xcc, 0x04, 0x5b, 0xe7, 0x1c, 0x3f, 0x80, 0x61, 0x54, 0x05, 0xba, 0xc8, 0x00, 0xf8, 0x09,
	0x4c, 0x32, 0x96, 0x7c, 0xd8, 0x89, 0x98, 0x8b, 0x98, 0xf1, 0x1f, 0xc5, 0x1c, 0x13, 0xda, 0x04,
	0xd5, 0xec, 0x0a, 0x10, 0x4c, 0x0f, 0xa5, 0x23, 0xf2, 0x0b, 0xc1, 0xc9, 0x92, 0xb1, 0xba, 0x99,
	0xd2, 0x49, 0xeb, 0x81, 0x8c, 0x1e, 0xd6, 0xf4, 0x4e, 0x73, 0xfa, 0xe7, 0x36, 0x37, 0x75, 0xf5,
	0xe8, 0xfc, 0xf6, 0xa2, 0x72, 0x60, 0x61, 0xae, 0xb5, 0x08, 0x1b, 0x1b, 0x3c, 0xdb, 0x06, 0xf2,
	0xb4, 0xc9, 0x44, 0x09, 0x83, 0xc1, 0x8b, 0x24, 0xe3, 0xda, 0xaf, 0xe2, 0x4c, 0x12, 0x38, 0xf9,
	0x28, 0x73, 0x71, 0x79, 0x6d, 0x04, 0x9a, 0x82, 0x7b, 0x10, 0xa5, 0xab, 0x2e, 0x55, 0xc7, 0xff,
	0x4a, 0x98, 0x3c, 0x86, 0xc9, 0x2a, 0xe5, 0x0a, 0x94, 0x72, 0xdf, 0x2a, 0x10, 0x39, 0xb3, 0x4b,
	0x14, 0xf3, 0x9b, 0xe0, 0x88, 0xea, 0x9d, 0x39, 0x82, 0x91, 0x47, 0x30, 0x5e, 0xed, 0x64, 0x56,
	0x5f, 0x71, 0x9c, 0x27, 0x56, 0xbe, 0x6b, 0xf2, 0xaf, 0x30, 0x78, 0x2f, 0xa2, 0xad, 0x66, 0x70,
	0x34, 0xf1, 0x14, 0xdc, 0xe4, 0xb0, 0x29, 0xa6, 0xf5, 0xa9, 0x3a, 0x16, 0xaf, 0xea, 0xb0, 0x29,
	0x66, 0xf4, 0xa9, 0x3a, 0x76, 0x2a, 0xff, 0xb0, 0xbc, 0xb8, 0xab, 0xef, 0x4f, 0x04, 0xb0, 0x92,
	0x71, 0x9e, 0xca, 0x5d, 0x7b, 0xef, 0x6e, 0xb5, 0xad, 0xe5, 0x70, 0x3b, 0x97, 0xc3, 0x6b, 0x2c,
	0x87, 0xc5, 0xb2, 0xd7, 0x60, 0xf9, 0xac, 0x66, 0xa1, 0x88, 0x12, 0x18, 0x33, 0x91, 0x45, 0x32,
	0x8e, 0x79, 0x94, 0xf3, 0x92, 0x8e, 0x4f, 0x1b, 0xd8, 0xf9, 0x1f, 0x07, 0x46, 0x4a, 0xd0, 0xcf,
	0x3c, 0xbd, 0x12, 0x11, 0xc7, 0x6f, 0x00, 0x8c, 0x4b, 0xf8, 0x9e, 0x65, 0xbb, 0x6d, 0x6f, 0xd8,
	0x9a, 0x58, 0x46, 0x5b, 0x72, 0x03, 0xbf, 0x86, 0x61, 0x6d, 0x13, 0x3e, 0xb5, 0xea, 0x2c, 0x6f,
	0xc3, 0x36, 0xbc, 0xfc, 0xfc, 0x15, 0xf8, 0xd5, 0xde, 0xe3, 0xbb, 0xa6, 0xca, 0xfa, 0x93, 0x0a,
	0x5b, 0xe0, 0xf2, 0xdb, 0xb7, 0x30, 0xb6, 0xd7, 0x03, 0xdf, 0x37, 0x85, 0x47, 0x0b, 0x1c, 0x76,
	0xa4, 0xca, 0x7b, 0x16, 0xe0, 0x29, 0xb3, 0xf1, 0x2d, 0x53, 0xa4, 0x5f, 0x55, 0x78, 0x04, 0x95,
	0xf5, 0x2f, 0x61, 0xa0, 0x65, 0xc7, 0x77, 0xac, 0xc1, 0xea, 0xf7, 0x10, 0xfe, 0x8b, 0x16, 0x1f,
	0x6e, 0xfa, 0x05, 0xfc, 0xe2, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x80, 0x7a, 0x67, 0xe9, 0x9d,
	0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RoomServiceClient is the client API for RoomService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RoomServiceClient interface {
	CreateRoom(ctx context.Context, in *CreateRoomReq, opts ...grpc.CallOption) (*CreateRoomAck, error)
	CloseRoom(ctx context.Context, in *CloseRoomReq, opts ...grpc.CallOption) (*CloseRoomAck, error)
	OpenPeer(ctx context.Context, in *OpenPeerReq, opts ...grpc.CallOption) (*OpenPeerAck, error)
	AddCandidate(ctx context.Context, in *AddCandidateReq, opts ...grpc.CallOption) (*AddCandidateAck, error)
	Kick(ctx context.Context, in *KickReq, opts ...grpc.CallOption) (*KickAck, error)
	Control(ctx context.Context, in *ControlReq, opts ...grpc.CallOption) (*ControlAck, error)
}

type roomServiceClient struct {
	cc *grpc.ClientConn
}

func NewRoomServiceClient(cc *grpc.ClientConn) RoomServiceClient {
	return &roomServiceClient{cc}
}

func (c *roomServiceClient) CreateRoom(ctx context.Context, in *CreateRoomReq, opts ...grpc.CallOption) (*CreateRoomAck, error) {
	out := new(CreateRoomAck)
	err := c.cc.Invoke(ctx, "/protocol.RoomService/CreateRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) CloseRoom(ctx context.Context, in *CloseRoomReq, opts ...grpc.CallOption) (*CloseRoomAck, error) {
	out := new(CloseRoomAck)
	err := c.cc.Invoke(ctx, "/protocol.RoomService/CloseRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) OpenPeer(ctx context.Context, in *OpenPeerReq, opts ...grpc.CallOption) (*OpenPeerAck, error) {
	out := new(OpenPeerAck)
	err := c.cc.Invoke(ctx, "/protocol.RoomService/OpenPeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) AddCandidate(ctx context.Context, in *AddCandidateReq, opts ...grpc.CallOption) (*AddCandidateAck, error) {
	out := new(AddCandidateAck)
	err := c.cc.Invoke(ctx, "/protocol.RoomService/AddCandidate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) Kick(ctx context.Context, in *KickReq, opts ...grpc.CallOption) (*KickAck, error) {
	out := new(KickAck)
	err := c.cc.Invoke(ctx, "/protocol.RoomService/Kick", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServiceClient) Control(ctx context.Context, in *ControlReq, opts ...grpc.CallOption) (*ControlAck, error) {
	out := new(ControlAck)
	err := c.cc.Invoke(ctx, "/protocol.RoomService/Control", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RoomServiceServer is the server API for RoomService service.
type RoomServiceServer interface {
	CreateRoom(context.Context, *CreateRoomReq) (*CreateRoomAck, error)
	CloseRoom(context.Context, *CloseRoomReq) (*CloseRoomAck, error)
	OpenPeer(context.Context, *OpenPeerReq) (*OpenPeerAck, error)
	AddCandidate(context.Context, *AddCandidateReq) (*AddCandidateAck, error)
	Kick(context.Context, *KickReq) (*KickAck, error)
	Control(context.Context, *ControlReq) (*ControlAck, error)
}

// UnimplementedRoomServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRoomServiceServer struct {
}

func (*UnimplementedRoomServiceServer) CreateRoom(ctx context.Context, req *CreateRoomReq) (*CreateRoomAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRoom not implemented")
}
func (*UnimplementedRoomServiceServer) CloseRoom(ctx context.Context, req *CloseRoomReq) (*CloseRoomAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CloseRoom not implemented")
}
func (*UnimplementedRoomServiceServer) OpenPeer(ctx context.Context, req *OpenPeerReq) (*OpenPeerAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenPeer not implemented")
}
func (*UnimplementedRoomServiceServer) AddCandidate(ctx context.Context, req *AddCandidateReq) (*AddCandidateAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddCandidate not implemented")
}
func (*UnimplementedRoomServiceServer) Kick(ctx context.Context, req *KickReq) (*KickAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Kick not implemented")
}
func (*UnimplementedRoomServiceServer) Control(ctx context.Context, req *ControlReq) (*ControlAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Control not implemented")
}

func RegisterRoomServiceServer(s *grpc.Server, srv RoomServiceServer) {
	s.RegisterService(&_RoomService_serviceDesc, srv)
}

func _RoomService_CreateRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRoomReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).CreateRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.RoomService/CreateRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).CreateRoom(ctx, req.(*CreateRoomReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_CloseRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseRoomReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).CloseRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.RoomService/CloseRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).CloseRoom(ctx, req.(*CloseRoomReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_OpenPeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenPeerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).OpenPeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.RoomService/OpenPeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).OpenPeer(ctx, req.(*OpenPeerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_AddCandidate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddCandidateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).AddCandidate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.RoomService/AddCandidate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).AddCandidate(ctx, req.(*AddCandidateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_Kick_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KickReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).Kick(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.RoomService/Kick",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).Kick(ctx, req.(*KickReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomService_Control_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ControlReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).Control(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.RoomService/Control",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).Control(ctx, req.(*ControlReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _RoomService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocol.RoomService",
	HandlerType: (*RoomServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRoom",
			Handler:    _RoomService_CreateRoom_Handler,
		},
		{
			MethodName: "CloseRoom",
			Handler:    _RoomService_CloseRoom_Handler,
		},
		{
			MethodName: "OpenPeer",
			Handler:    _RoomService_OpenPeer_Handler,
		},
		{
			MethodName: "AddCandidate",
			Handler:    _RoomService_AddCandidate_Handler,
		},
		{
			MethodName: "Kick",
			Handler:    _RoomService_Kick_Handler,
		},
		{
			MethodName: "Control",
			Handler:    _RoomService_Control_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "peer.proto",
}
